#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

if ! which go > /dev/null; then
	echo "golang needs to be installed"
	exit 1
fi

if ! which docker > /dev/null; then
	echo "docker needs to be installed"
	exit 1
fi

: ${IMAGE:?"Need to set IMAGE, e.g. gcr.io/coreos-k8s-scale-testing/etcd-operator"}

GIT_SHA=`git rev-parse --short HEAD || echo "GitNotFound"`

bin_dir="$(pwd)/_output/bin"
mkdir -p ${bin_dir} || true


ldKVPairs="github.com/coreos/etcd-operator/pkg/util/k8sutil.BackupImage=${IMAGE}"
gitHash="github.com/coreos/etcd-operator/version.GitSHA=${GIT_SHA}"

go_ldflags="-X ${ldKVPairs} -X ${gitHash}"

GOBIN=${bin_dir} CGO_ENABLED=0 go install -installsuffix cgo -ldflags "$go_ldflags" ./cmd/operator/
mv ${bin_dir}/operator ${bin_dir}/etcd-operator

GOBIN=${bin_dir} CGO_ENABLED=0 go install -installsuffix cgo -ldflags "$go_ldflags" ./cmd/backup/
mv ${bin_dir}/backup ${bin_dir}/etcd-backup

docker build --tag "${IMAGE}" -f hack/build/operator/Dockerfile . 1>/dev/null
# For gcr users, do "gcloud docker -a" to have access.
docker push "${IMAGE}" 1>/dev/null
